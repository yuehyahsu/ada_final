select(patient_id, sex, birth_year, age, province, city, infection_case, confirmed_date, released_date,
deceased_date, state) %>%
mutate(approx_age = 2020 - birth_year,
resolved_date = coalesce(released_date, deceased_date),
survival_days = if_else(!is.na(resolved_date), resolved_date - confirmed_date,
lubridate::mdy("04/20/2020") - confirmed_date),
event = if_else(state == "deceased", 1, 0)) %>%
rename(age_cat = age) %>%
mutate(age_cat_2 = if_else(approx_age < 18, "Under 18",
if_else(approx_age < 31, "18-30",
if_else(approx_age < 56, "31-55",
if_else(approx_age < 76, "56-75", "Over 75"))))) %>%
left_join(region, by = c("province", "city")) %>%
select(-code:-university_count, -nursing_home_count) %>%
left_join(weather, by = c("province" = "province", "confirmed_date" = "date")) %>%
select(-code, -min_temp, -max_temp, -most_wind_direction) %>%
filter(is.na(survival_days) | !(survival_days < 0)) %>%   # there are some negative survival days -- bad data?
filter(province %in% c("Busan", "Daegu", "Gangwon-do", "Gyeonggi-do",
"Gyeongsangbuk-do", "Seoul", "Ulsan")) # only including provinces with at least one death
data %>%
filter(state == "deceased") %>%
mutate(survival_days = as.numeric(survival_days, units = "days")) %>%
ggplot(aes(x = survival_days, color = sex)) +
geom_density(alpha = 0.3) +
xlab("Days of Survival") +
scale_color_discrete(name = "Sex") +
theme_bw()
data %>%
filter(state == "deceased") %>%
mutate(survival_days = as.numeric(survival_days, units = "days")) %>%
ggplot(aes(x = survival_days, color = age_cat)) +
geom_density(alpha = 0.3) +
xlab("Days of Survival") +
scale_color_discrete(name = "Age") +
theme_bw()
data %>%
filter(state == "deceased") %>%
mutate(survival_days = as.numeric(survival_days, units = "days")) %>%
ggplot(aes(x = survival_days, color = province)) +
geom_density(alpha = 0.3) +
xlab("Days of Survival") +
scale_color_discrete(name = "Province") +
theme_bw()
### K-M values and K-M curves
sex_surv <- survfit(Surv(survival_days, event, type = "right") ~ sex, data)
#age_surv_data <- data %>%
#    filter(age_cat %in% c("30s", "50s", "60s", "70s", "80s", "90s"))
age_surv <- survfit(Surv(survival_days, event, type = "right") ~ age_cat, data)
province_surv <- survfit(Surv(survival_days, event, type = "right") ~ province, data)
autoplot(sex_surv) +
labs(x = "Survival Days", y = "Proportion Surviving", title = "KM Survival Plots by Sex") +
theme_bw()
autoplot(age_surv) +
labs(x = "Survival Days", y = "Proportion Surviving", title = "KM Survival Plots by Age") +
theme_bw()
autoplot(province_surv) +
labs(x = "Survival Days", y = "Proportion Surviving", title = "KM Survival Plots by Province") +
theme_bw()
data %>% count(age_cat)
age_surv <- survfit(Surv(survival_days, event, type = "right") ~ age_cat, age_surv_data)
age_surv_data <- data %>%
filter(age_cat %in% c("30s", "50s", "60s", "70s", "80s", "90s"))
age_surv <- survfit(Surv(survival_days, event, type = "right") ~ age_cat, age_surv_data)
autoplot(age_surv) +
labs(x = "Survival Days", y = "Proportion Surviving", title = "KM Survival Plots by Age") +
theme_bw()
autoplot(province_surv) +
labs(x = "Survival Days", y = "Proportion Surviving", title = "KM Survival Plots by Province") +
theme_bw()
data %>% count(survival_days)
data %>% count(survival_days) %>% arrange(desc(n))
source('C:/Users/yuehy/Google Drive/01_projects/ada_final/02_analysis/02_k-m_stats.R', echo=TRUE)
source('C:/Users/yuehy/Google Drive/01_projects/ada_final/02_analysis/03_cox_univ_models.R', echo=TRUE)
source('C:/Users/yuehy/Google Drive/01_projects/ada_final/02_analysis/04_cox_multiv.R', echo=TRUE)
data %>% count(province)
source('C:/Users/yuehy/Google Drive/01_projects/ada_final/02_analysis/05_demographics.R', echo=TRUE)
source('C:/Users/yuehy/Google Drive/01_projects/ada_final/02_analysis/05_demographics.R', echo=TRUE)
table021
table01
head(data)
source('C:/Users/yuehy/Google Drive/01_projects/ada_final/02_analysis/05_demographics.R', echo=TRUE)
source('C:/Users/yuehy/Google Drive/01_projects/ada_final/01_data/04_clean_data.R', echo=TRUE)
data <- patient_info %>%
select(patient_id, sex, birth_year, age, province, city, infection_case, confirmed_date, released_date,
deceased_date, state) %>%
mutate(approx_age = 2020 - birth_year,
resolved_date = coalesce(released_date, deceased_date),
survival_days = if_else(!is.na(resolved_date), resolved_date - confirmed_date,
lubridate::mdy("04/20/2020") - confirmed_date),
resolved_days = resolved_date - confirmed_date,
event = if_else(state == "deceased", 1, 0)) %>%
rename(age_cat = age) %>%
mutate(age_cat_2 = if_else(approx_age < 18, "Under 18",
if_else(approx_age < 31, "18-30",
if_else(approx_age < 56, "31-55",
if_else(approx_age < 76, "56-75", "Over 75"))))) %>%
left_join(region, by = c("province", "city")) %>%
select(-code:-university_count, -nursing_home_count) %>%
left_join(weather, by = c("province" = "province", "confirmed_date" = "date")) %>%
select(-code, -min_temp, -max_temp, -most_wind_direction)
data %>% count(survival_days) %>% arrange(survival_days)
?recode
source('C:/Users/yuehy/Google Drive/01_projects/ada_final/01_data/04_clean_data.R', echo=TRUE)
test_ph <- cox.zph(surv_cox, terms = FALSE)
test_ph
(surv_cox_me <- coxph(Surv(survival_days, event) ~ sex + approx_age + (1 | province), data))
install.packages("coxme")
(surv_cox_me <- coxme(Surv(survival_days, event) ~ sex + approx_age + (1 | province), data))
library(coxme)
(surv_cox_me <- coxme(Surv(survival_days, event) ~ sex + approx_age + (1 | province), data))
summary(surv_cox_me)
library(jtools)
summ(surv_cox_me)
summ(surv_cox)
broom::tidy(surv_cox, exp = T)
broom::tidy(surv_cox_me)
broom::tidy(surv_cox, exp = T) %>%
kable()
library(kableExtra)
broom::tidy(surv_cox, exp = T) %>%
kable()
install.packages("gtsummary")
surv_cox %>%
gtsummary::tbl_regression(exp = T)
surv_cox_me %>%
gtsummary::tbl_regression(exp = T)
(surv_cox <- coxph(Surv(survival_days, event) ~ sex + approx_age + province - 1, data))
summary(surv_cox)
surv_cox %>%
gtsummary::tbl_regression(exp = T)
(surv_cox <- coxph(Surv(survival_days, event) ~ sex + approx_age + province, data))
stargazer(surv_cox, type = "html")
library(stargazer)
stargazer(surv_cox, type = "html")
stargazer(surv_cox)
stargazer(surv_cox, type = "html", out = "models.html")
stargazer(surv_cox_me, type = "html", out = "models.html")
surv_cox_me
summary(surv_cox)
surv_cox %>%
gtsummary::tbl_regression(exp = T)
library(gtsummary)
gtsummary::
surv_cox %>%
tbl_regression(exp = T)
surv_cox %>%
tbl_regression()
surv_cox %>%
tbl_regression(exp = T)
surv_cox
surv_cox %>%
tbl_regression(exp = T,
label = list(sexmale = "Male"))
surv_cox %>%
tbl_regression(exp = T,
label = list(sex = "Male"))
surv_cox %>%
tbl_regression(exp = T,
label = list(sex = "Male"))
surv_cox %>%
tbl_regression(exp = T,
label = list(sex = "Sex", approx_age = "Age", province = "Province"))
summ(surv_cox)
sjPlot::plot_model(surv_cox)
sjPlot::plot_model(surv_cox) + xlim(-1, 1)
sjPlot::plot_model(surv_cox, type = "pred")
sjPlot::plot_model(surv_cox, type = "pred", terms = "province")
sjPlot::plot_model(surv_cox, rm.terms("province"))
sjPlot::plot_model(surv_cox, rm.terms = c("province"))
sjPlot::plot_model(surv_cox, rm.terms = c("province [Gangwon-do"))
sjPlot::plot_model(surv_cox, rm.terms = c("province [Gangwon-do]"))
sjPlot::plot_model(surv_cox, rm.terms = c("province [Gangwon-do]")) +
theme_sjplot2()
library(sjPlot)
plot_model(surv_cox, rm.terms = c("province [Gangwon-do]")) +
theme_sjplot2()
plot_model(surv_cox, rm.terms = c("province [Gangwon-do]"),
title = "Figure 2.") +
theme_sjplot2() +
plot_model(surv_cox, rm.terms = c("province [Gangwon-do]"),
title = "Figure 2.") +
theme_sjplot2() +
plot_model(surv_cox, rm.terms = c("province [Gangwon-do]")) +
theme_sjplot2() +
plot_model(surv_cox, rm.terms = c("province [Gangwon-do]")) +
theme_sjplot2() +
plot_model(surv_cox, rm.terms = c("province [Gangwon-do]"),
title = "Figure 2. ") +
theme_sjplot2()
plot_model(surv_cox, rm.terms = c("province [Gangwon-do]"),
title = "Figure 2. ") +
theme_sjplot2() +
labs(
x = "mmm"
)
plot_model(surv_cox, rm.terms = c("province [Gangwon-do]")) +
theme_sjplot2() +
labs(
x = "mmm"
title = "Fg"
plot_model(surv_cox, rm.terms = c("province [Gangwon-do]")) +
theme_sjplot2() +
labs(
x = "mmm",
title = "Fg"
)
plot_model(surv_cox, rm.terms = c("province [Gangwon-do]")) +
theme_sjplot2() +
geom_vline(xintercept = 1) +
labs(
title = "Figure 2. Effect Size"
)
plot_model(surv_cox, rm.terms = c("province [Gangwon-do]")) +
theme_sjplot2() +
geom_vline(xintercept = 1, color = "red") +
labs(
title = "Figure 2. Effect Size"
)
plot_model(surv_cox, rm.terms = c("province [Gangwon-do]")) +
theme_sjplot2() +
geom_hline(yintercept = 1, color = "red") +
labs(
title = "Figure 2. Effect Size"
)
plot_model(surv_cox, rm.terms = c("province [Gangwon-do]")) +
theme_sjplot2() +
geom_hline(yintercept = 1, color = "grey50") +
labs(
title = "Figure 2. Effect Size"
)
plot_model(surv_cox, rm.terms = c("province [Gangwon-do]")) +
theme_sjplot2() +
geom_hline(yintercept = 1, color = "grey50") +
labs(
x = "Estimates (log scale)"
title = "Figure 2. Hazard Ratios of Covariates"
plot_model(surv_cox, rm.terms = c("province [Gangwon-do]")) +
theme_sjplot2() +
geom_hline(yintercept = 1, color = "grey50") +
labs(
x = "Estimates (log scale)",
title = "Figure 2. Hazard Ratios of Covariates"
)
plot_model(surv_cox, rm.terms = c("province [Gangwon-do]")) +
theme_sjplot2() +
geom_hline(yintercept = 1, color = "grey50") +
labs(
y = "Estimates (log scale)",
title = "Figure 2. Hazard Ratios of Covariates"
)
plot_model(surv_cox, rm.terms = c("province [Gangwon-do]")) +
theme_sjplot2() +
geom_hline(yintercept = 1, color = "grey50") +
labs(
y = "Estimates (log scale)",
title = "Figure 2. Hazard Ratios of Covariates"
) +
scale_x_discrete(labels = c("sex [male]" = "Male (ref: Female)"))
plot_model(surv_cox, rm.terms = c("province [Gangwon-do]")) +
theme_sjplot2() +
geom_hline(yintercept = 1, color = "grey50") +
labs(
y = "Estimates (log scale)",
title = "Figure 2. Hazard Ratios of Covariates"
) +
scale_x_discrete(labels = c("sexmale" = "Male (ref: Female)"))
plot_model(surv_cox, rm.terms = c("province [Gangwon-do]")) +
theme_sjplot2() +
geom_hline(yintercept = 1, color = "grey50") +
labs(
y = "Estimates (log scale)",
title = "Figure 2. Hazard Ratios of Covariates"
) +
scale_x_discrete(labels = c("sexmale" = "Male (ref: Female)",
"approx_age" = "Age",
"provinceDaegu" = "Daegu (ref: Busan)",
"provinceGyeonggi-do" = "Gyeonggi-do",
"provinceGyeongsangbuk-do" = "Gyeongsangbuk-do"))
plot_model(surv_cox, rm.terms = c("province [Gangwon-do]")) +
theme_sjplot2() +
geom_hline(yintercept = 1, color = "grey50") +
labs(
y = "Estimates (log scale)",
title = "Figure 2. Hazard Ratios of Covariates"
) +
scale_x_discrete(labels = c("sexmale" = "Male (ref: Female)",
"approx_age" = "Age",
"provinceDaegu" = "Daegu (ref: Busan)",
"provinceGyeonggi-do" = "Gyeonggi-do",
"provinceGyeongsangbuk-do" = "Gyeongsangbuk-do",
"provinceSeoul" = "Seoul",
"provinceUlsan" = "Ulsan"))
plot_model(surv_cox, rm.terms = c("province [Gangwon-do]")) +
theme_sjplot2() +
geom_hline(yintercept = 1, color = "grey50") +
labs(
y = "Estimates (log scale)",
title = "Figure 2. Hazard Ratios of Covariates"
) +
scale_x_discrete(labels = c("sexmale" = "Male (ref: Female)",
"approx_age" = "Age",
"provinceDaegu" = "Daegu (ref: Busan)",
"provinceGyeonggi-do" = "Gyeonggi-do",
"provinceGyeongsangbuk-do" = "Gyeongsangbuk-do",
"provinceSeoul" = "Seoul",
"provinceUlsan" = "Ulsan"))
test
test <- plot_model(surv_cox, rm.terms = c("province [Gangwon-do]")) +
theme_sjplot2() +
geom_hline(yintercept = 1, color = "grey50") +
labs(
y = "Estimates (log scale)",
title = "Figure 2. Hazard Ratios of Covariates"
) +
scale_x_discrete(labels = c("sexmale" = "Male (ref: Female)",
"approx_age" = "Age",
"provinceDaegu" = "Daegu (ref: Busan)",
"provinceGyeonggi-do" = "Gyeonggi-do",
"provinceGyeongsangbuk-do" = "Gyeongsangbuk-do",
"provinceSeoul" = "Seoul",
"provinceUlsan" = "Ulsan"))
test
print(test)
pwd()
getwd()
knitr::include_graphics("./03_output/presentation_images/korea_provinces.png")
knitr::include_graphics("./03_output/presentation_images/korea_provinces.png")
data %>% filter(event == 1) %>% View(.)
data %>% filter(event == 1 & is.na(age_cat)) %>% View(.)
data %>% filter(event == 1) %>% View(.)
data %>% filter(event == 1 & is.na(approx_age)) %>% View(.)
data %>% filter(event == 1 & is.na(approx_age)) %>% select(patient_id)
# we don't want any cases removed, so for those who have missing approx_age, take median of age_cat
data[patient_id == "3014000001"]
# we don't want any cases removed, so for those who have missing approx_age, take median of age_cat
data$patient_id == "3014000001"]
# we don't want any cases removed, so for those who have missing approx_age, take median of age_cat
data$patient_id == "3014000001"
# we don't want any cases removed, so for those who have missing approx_age, take median of age_cat
data$approx_age[data$patient_id == "3014000001"]
# we wont' do mixed effects modeling but this is what it would require
(surv_cox_me <- coxme(Surv(survival_days, event) ~ sex + approx_age + (1 | province), data))
(surv_cox <- coxph(Surv(survival_days, event) ~ sex + approx_age + province, data))
summary(surv_cox)
data %>% select()
data %>% filter(province == "Gangwon-do")
data %>% filter(province == "Gangwon-do") %>% count(event)
data %>% filter(event == 1 & is.na(sex)) %>% View(.)
data %>% filter(event == 1 & is.na(approx_age)) %>% View(.)
source('C:/Users/yuehy/Google Drive/01_projects/ada_final/01_data/04_clean_data.R', echo=TRUE)
data %>% filter(event == 1 & is.na(approx_age)) %>% View(.)
(surv_cox <- coxph(Surv(survival_days, event) ~ sex + approx_age + province, data))
summary(surv_cox)
data <- patient_info %>%
select(patient_id, sex, birth_year, age, province, city, infection_case, confirmed_date, released_date,
deceased_date, state) %>%
mutate(approx_age = 2020 - birth_year,
resolved_date = coalesce(released_date, deceased_date),
survival_days = if_else(!is.na(resolved_date), resolved_date - confirmed_date,
lubridate::mdy("04/20/2020") - confirmed_date),
resolved_days = resolved_date - confirmed_date,
event = if_else(state == "deceased", 1, 0)) %>%
rename(age_cat = age) %>%
mutate(age_cat_2 = if_else(approx_age < 18, "Under 18",
if_else(approx_age < 31, "18-30",
if_else(approx_age < 56, "31-55",
if_else(approx_age < 76, "56-75", "Over 75"))))) %>%
left_join(region, by = c("province", "city")) %>%
select(-code:-university_count, -nursing_home_count) %>%
left_join(weather, by = c("province" = "province", "confirmed_date" = "date")) %>%
select(-code, -min_temp, -max_temp, -most_wind_direction)
data %>% filter(event == 1)
data %>% filter(event == 1) %>% count(province)
figure02 <- plot_model(surv_cox)) +
theme_sjplot2() +
geom_hline(yintercept = 1, color = "grey50") +
labs(
figure02 <- plot_model(surv_cox)) +
theme_sjplot2() +
geom_hline(yintercept = 1, color = "grey50") +
labs(
figure02 <- plot_model(surv_cox) +
theme_sjplot2() +
geom_hline(yintercept = 1, color = "grey50") +
labs(
y = "Estimates (log scale)",
title = "Figure 2. Hazard Ratios of Covariates"
) +
scale_x_discrete(labels = c("sexmale" = "Male (ref: Female)",
"approx_age" = "Age",
"provinceDaegu" = "Daegu (ref: Busan)",
"provinceGyeonggi-do" = "Gyeonggi-do",
"provinceGyeongsangbuk-do" = "Gyeongsangbuk-do",
"provinceSeoul" = "Seoul",
"provinceUlsan" = "Ulsan"))
figure02
figure02 <- plot_model(surv_cox) +
theme_sjplot2() +
geom_hline(yintercept = 1, color = "grey50") +
labs(
y = "Estimates (log scale)",
title = "Figure 2. Hazard Ratios of Covariates"
) +
scale_x_discrete(labels = c("sexmale" = "Male (ref: Female)",
"approx_age" = "Age",
"provinceDaegu" = "Daegu (ref: Busan)",
"provinceGangwon-do" = "Gangwon-do",
"provinceGyeonggi-do" = "Gyeonggi-do",
"provinceGyeongsangbuk-do" = "Gyeongsangbuk-do",
"provinceSeoul" = "Seoul",
"provinceUlsan" = "Ulsan"))
figure02
data %>%
filter(state == "deceased") %>%
mutate(survival_days = as.numeric(survival_days, units = "days")) %>%
ggplot(aes(x = survival_days, color = sex)) +
geom_density(alpha = 0.3) +
xlab("Days of Survival") +
scale_color_discrete(name = "Sex") +
theme_bw()
par(mfrow = c(2, 2))
plot(cox.zph(surv_cox, terms = FALSE))
par(mfrow = c(3, 3))
plot(cox.zph(surv_cox, terms = FALSE))
surv_cox
plot(cox.zph(surv_cox, terms = FALSE))
plot(cox.zph(surv_cox))
dfbeta <- residuals(surv_cox, type="dfbeta")
surv_cox
source('C:/Users/yuehy/Google Drive/01_projects/ada_final/01_data/04_clean_data.R', echo=TRUE)
plot(cox.zph(surv_cox))
par(mfrow=c(2, 2))
par(mfrow=c(2, 2))
plot(cox.zph(surv_cox))
par(mfrow=c(3, 3))
plot(cox.zph(surv_cox))
par(mfrow=c(2, 2))
plot(cox.zph(surv_cox))
dfbeta <- residuals(surv_cox, type="dfbeta")
par(mfrow=c(2, 2))
for (j in 1:3) {
plot(dfbeta[, j], ylab=names(coef(surv_cox))[j])
abline(h=0, lty=2)
}
dfbeta <- residuals(surv_cox, type="dfbeta")
par(mfrow=c(2, 2))
for (j in 1:3) {
plot(dfbeta[, j], ylab=names(coef(surv_cox))[j])
abline(h=0, lty=2)
}
dfbeta <- residuals(surv_cox, type="dfbeta")
par(mfrow=c(3,3))
for (j in 1:3) {
plot(dfbeta[, j], ylab=names(coef(surv_cox))[j])
abline(h=0, lty=2)
}
dfbeta <- residuals(surv_cox, type="dfbeta")
par(mfrow=c(3,3))
for (j in 1:8) {
plot(dfbeta[, j], ylab=names(coef(surv_cox))[j])
abline(h=0, lty=2)
}
dfbeta <- residuals(surv_cox, type="dfbeta")
par(mfrow=c(3,3))
for (j in 1:9) {
plot(dfbeta[, j], ylab=names(coef(surv_cox))[j])
abline(h=0, lty=2)
}
dfbeta <- residuals(surv_cox, type="dfbeta")
par(mfrow=c(3,3))
for (j in 1:8) {
plot(dfbeta[, j], ylab=names(coef(surv_cox))[j])
abline(h=0, lty=2)
}
data %>% count(province)
par(mfrow=c(2, 2))
res <- residuals(mod.allison.4, type="martingale")
X <- as.matrix(Rossi[, c("sex", "approx_age", "province")]) # matrix of covariates
X <- as.matrix(data[, c("sex", "approx_age", "province")]) # matrix of covariates
par(mfrow=c(2, 2))
res <- residuals(surv_cox, type="martingale")
X <- as.matrix(data[, c("sex", "approx_age", "province")]) # matrix of covariates
for (j in 1:3) { # residual plots
plot(X[, j], res, xlab=c("sex", "approx_age", "province")[j], ylab="residuals")
abline(h=0, lty=2)
lines(lowess(X[, j], res, iter=0))
}
par(mfrow=c(2, 2))
res <- residuals(surv_cox, type="martingale")
X <- as.matrix(data[, c("sex", "approx_age", "province")]) # matrix of covariates
for (j in 1:3) { # residual plots
plot(X[, j], res, xlab=c("sex", "approx_age", "province")[j], ylab="residuals")
abline(h=0, lty=3)
lines(lowess(X[, j], res, iter=0))
}
X
xlab
X[,1]
par(mfrow=c(2, 2))
res <- residuals(surv_cox, type="martingale")
X <- as.matrix(data[, c("sex", "approx_age", "province")]) # matrix of covariates
par(mfrow=c(2, 2))
for (j in 1:3) { # residual plots
plot(X[, j], res, xlab=c("sex", "approx_age", "province")[j], ylab="residuals")
abline(h=0, lty=2)
lines(lowess(X[, j], res, iter=0))
}
res
knitr::include_graphics("./03_output/presentation_images/wsj.scj.png")
knitr::include_graphics("./03_output/presentation_images/wsj_scj.png")
knitr::include_graphics("./03_output/presentation_images/wsj_scj.png")
knitr::include_graphics("./03_output/presentation_images/bbc_scj.png")
