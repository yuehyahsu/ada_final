case <- read_csv(./01_data/raw/Case.csv)
library(tidyverse)
case <- read_csv("./01_data/raw/Case.csv")
View(case)
source('C:/Users/yuehy/Google Drive/01_projects/ada_final/01_data/03_load_data.R', echo=TRUE)
head(case)
head(patient_info)
head(patient_route)
head(region)
head(seoul)
head(weather)
View(patient_info)
patient_info %>% count(disease)
patient_info %>% count(state)
rm(list = ls())
knitr::opts_chunk$set(echo = TRUE)
#provide shorter names for variables
names(cerv)<-c("ID", "age_category","yr_dx", "sex", "race",
"insurance", "marital", "%pov", "%edu", "cause_spec_death",
"first_primary", "surv_mo", "vital_stat", "Stage")
#install.packages("survminer")#for pairwise diffs
#install.packages("ggfortify")
#install.packages("haven")
library(readr) #for read txt file
library(survival) #for calculating KM values
library(survminer)#for pairwise diffs
library(ggfortify) #for KM curves
library(readxl) # for reading in excel file
library(ggplot2) # for plotting KM curve
library(tidyverse) # for various packages
library(haven) #for read_csv
#load data for this exercise
cerv<- read_csv("SEERcerv2004to2015.csv") #load data for this exercise
str(cerv)
View(cerv)
#provide shorter names for variables
names(cerv)<-c("ID", "age_category","yr_dx", "sex", "race",
"insurance", "marital", "%pov", "%edu", "cause_spec_death",
"first_primary", "surv_mo", "vital_stat", "Stage")
##Recode stage variable as a factor variable and label it
table(cerv$Stage)
cerv$stage_f[
cerv$Stage=="IA"|
cerv$Stage=="IA1"|
cerv$Stage=="IA2"|
cerv$Stage=="IB"|
cerv$Stage=="IB1"|
cerv$Stage=="IB2"|
cerv$Stage=="INOS"]<-0
cerv$stage_f[
cerv$Stage=="IIA"|
cerv$Stage=="IIB"|
cerv$Stage=="IINOS"]<-1
cerv$stage_f[
cerv$Stage=="IIIA"|
cerv$Stage=="IIIB"|
cerv$Stage=="IIINOS"]<-2
cerv$stage_f[
cerv$Stage=="IVA"|
cerv$Stage=="IVB"|
cerv$Stage=="IVNOS"]<-3
cerv$stage_f<-factor(cerv$stage_f,
levels = c(0,1,2,3),
labels = c("Stage 1", "Stage 2", "Stage 3", "Stage 4"))
#Recode cause specific death as 1/0 if the person died/did not die of breast cancer
cerv$event_f[
cerv$cause_spec_death=="Dead (attributable to this cancer dx)"]<-1
cerv$event_f[
cerv$cause_spec_death=="Alive or dead of other cause"|
cerv$cause_spec_death=="N/A not first tumor"]<-0
#Recode insurance status as a factor variable and label it
cerv$insurance_f[
cerv$insurance=="Insured"]<-0
cerv$insurance_f[
cerv$insurance=="Insured/No specifics"]<-1
cerv$insurance_f[
cerv$insurance=="Any Medicaid"]<-2
cerv$insurance_f[
cerv$insurance=="Uninsured"]<-3
cerv$insurance_f<-factor(cerv$insurance_f,
levels = c(0,1,2,3),
labels = c("Insured", "Insured/No specifics", "Any Medicaid", "Uninsured"))
source('C:/Users/yuehy/Google Drive/01_projects/ada_final/__master_analysis_script.R', echo=TRUE)
region %>% count(city)
patient_info %>% count(city)
seoul %>% count(city)
data <- patient_info %>%
select(patient_id, sex, birth_year, age, province, city, infection_case, confirmed_date, released_date,
deceased_date, state) %>%
mutate(resolved_date = coalesce(released_date, deceased_date)) %>%
left_join(region, by = c("province", "city"))
View(data)
resolved_date - confirmed_date
data$resolved_date - data$confirmed_date
data <- patient_info %>%
select(patient_id, sex, birth_year, age, province, city, infection_case, confirmed_date, released_date,
deceased_date, state) %>%
mutate(resolved_date = coalesce(released_date, deceased_date),
survival_days = resolved_date - confirmed_date) %>%
left_join(region, by = c("province", "city")) %>%
select(-code:-university_count, -nursing_home_count) %>%
left_join(weather, by = "province")
data <- patient_info %>%
select(patient_id, sex, birth_year, age, province, city, infection_case, confirmed_date, released_date,
deceased_date, state) %>%
mutate(resolved_date = coalesce(released_date, deceased_date),
survival_days = resolved_date - confirmed_date) %>%
left_join(region, by = c("province", "city")) %>%
select(-code:-university_count, -nursing_home_count) %>%
left_join(weather, by = "province") %>%
select(-code, -min_temp, -max_temp, -most_wind_direction)
data <- patient_info %>%
select(patient_id, sex, birth_year, age, province, city, infection_case, confirmed_date, released_date,
deceased_date, state) %>%
mutate(resolved_date = coalesce(released_date, deceased_date),
survival_days = resolved_date - confirmed_date) %>%
left_join(region, by = c("province", "city")) %>%
select(-code:-university_count, -nursing_home_count) %>%
left_join(weather, by = c("province" = "province", "confirmed_date" = "date")) %>%
select(-code, -min_temp, -max_temp, -most_wind_direction)
ggplot(data) %>%
geom_histogram(aes(x = survival_days))
ggplot(data) +
geom_histogram(aes(x = survival_days))
data <- patient_info %>%
select(patient_id, sex, birth_year, age, province, city, infection_case, confirmed_date, released_date,
deceased_date, state) %>%
mutate(resolved_date = coalesce(released_date, deceased_date),
survival_days = resolved_date - confirmed_date) %>%
left_join(region, by = c("province", "city")) %>%
select(-code:-university_count, -nursing_home_count) %>%
left_join(weather, by = c("province" = "province", "confirmed_date" = "date")) %>%
select(-code, -min_temp, -max_temp, -most_wind_direction) %>%
filter(survival_days >= 0) # there are some negative survival days -- bad data?
data <- patient_info %>%
select(patient_id, sex, birth_year, age, province, city, infection_case, confirmed_date, released_date,
deceased_date, state) %>%
mutate(resolved_date = coalesce(released_date, deceased_date),
survival_days = resolved_date - confirmed_date) %>%
left_join(region, by = c("province", "city")) %>%
select(-code:-university_count, -nursing_home_count) %>%
left_join(weather, by = c("province" = "province", "confirmed_date" = "date")) %>%
select(-code, -min_temp, -max_temp, -most_wind_direction) %>%
filter(!(survival_days < 0)) # there are some negative survival days -- bad data?
data <- patient_info %>%
select(patient_id, sex, birth_year, age, province, city, infection_case, confirmed_date, released_date,
deceased_date, state) %>%
mutate(resolved_date = coalesce(released_date, deceased_date),
survival_days = resolved_date - confirmed_date) %>%
left_join(region, by = c("province", "city")) %>%
select(-code:-university_count, -nursing_home_count) %>%
left_join(weather, by = c("province" = "province", "confirmed_date" = "date")) %>%
select(-code, -min_temp, -max_temp, -most_wind_direction) %>%
filter(is.na(survival_days) | !(survival_days < 0)) # there are some negative survival days -- bad data?
saveRDS(data, file = "./01_data/processed/data.rds")
source('C:/Users/yuehy/Google Drive/01_projects/ada_final/__master_analysis_script.R', echo=TRUE)
ls()
source('C:/Users/yuehy/Google Drive/01_projects/ada_final/__master_analysis_script.R', echo=TRUE)
saveRDS(data, file = "./01_data/processed/data.rds")
data
View(data)
data %>% count(deceased_date)
data %>% count(state)
data %>%
filter(state == "deceased") %>%
ggplot(aes(x = survival_days, color = sex)) +
geom_density(alpha = 0.3) +
xlab("Days of Survival") +
scale_color_discrete(name = "Sex") +
theme_bw()
data %>%
filter(state == "deceased") %>%
mutate(survival_days = as.numeric(survival_days, units = "days")) %>%
ggplot(aes(x = survival_days, color = sex)) +
geom_density(alpha = 0.3) +
xlab("Days of Survival") +
scale_color_discrete(name = "Sex") +
theme_bw()
data %>%
filter(state == "deceased") %>%
mutate(survival_days = as.numeric(survival_days, units = "days")) %>%
ggplot(aes(x = survival_days, color = age)) +
geom_density(alpha = 0.3) +
xlab("Days of Survival") +
scale_color_discrete(name = "Age") +
theme_bw()
data %>%
filter(state == "deceased") %>%
mutate(survival_days = as.numeric(survival_days, units = "days")) %>%
ggplot(aes(x = survival_days, color = province)) +
geom_density(alpha = 0.3) +
xlab("Days of Survival") +
scale_color_discrete(name = "Province") +
theme_bw()
library(survival)
data
data %>% count(state)
source('C:/Users/yuehy/Google Drive/01_projects/ada_final/__master_analysis_script.R', echo=TRUE)
View(data)
data %>% count(state)
today()
data <- patient_info %>%
select(patient_id, sex, birth_year, age, province, city, infection_case, confirmed_date, released_date,
deceased_date, state) %>%
mutate(approx_age = 2020 - birth_year,
resolved_date = coalesce(released_date, deceased_date),
survival_days = deceased_date - confirmed_date,
event = if_else(state == "deceased", 1, 0)) %>%
rename(age_cat = age) %>%
left_join(region, by = c("province", "city")) %>%
select(-code:-university_count, -nursing_home_count) %>%
left_join(weather, by = c("province" = "province", "confirmed_date" = "date")) %>%
select(-code, -min_temp, -max_temp, -most_wind_direction) %>%
filter(is.na(survival_days) | !(survival_days < 0)) # there are some negative survival days -- bad data?
View(data)
data %>% count(infection_case)
data %>% count(infection_case) %>% arrange(desc(n))
mutate(survival_days = as.numeric(survival_days, units = "days")) %>%
ggplot(aes(x = survival_days, color = infection_case)) +
geom_density(alpha = 0.3) +
xlab("Days of Survival") +
scale_color_discrete(name = "Infection Case") +
theme_bw()
data %>%
filter(state == "deceased") %>%
mutate(survival_days = as.numeric(survival_days, units = "days")) %>%
ggplot(aes(x = survival_days, color = sex)) +
geom_density(alpha = 0.3) +
xlab("Days of Survival") +
scale_color_discrete(name = "Sex") +
theme_bw()
data %>%
filter(state == "deceased") %>%
mutate(survival_days = as.numeric(survival_days, units = "days")) %>%
ggplot(aes(x = survival_days, color = age)) +
geom_density(alpha = 0.3) +
xlab("Days of Survival") +
scale_color_discrete(name = "Age") +
theme_bw()
data %>%
filter(state == "deceased") %>%
mutate(survival_days = as.numeric(survival_days, units = "days")) %>%
ggplot(aes(x = survival_days, color = age_cat)) +
geom_density(alpha = 0.3) +
xlab("Days of Survival") +
scale_color_discrete(name = "Age") +
theme_bw()
data %>%
filter(state == "deceased") %>%
mutate(survival_days = as.numeric(survival_days, units = "days")) %>%
ggplot(aes(x = survival_days, color = approx_age)) +
geom_density(alpha = 0.3) +
xlab("Days of Survival") +
scale_color_discrete(name = "Age") +
theme_bw()
data %>%
filter(state == "deceased") %>%
mutate(survival_days = as.numeric(survival_days, units = "days")) %>%
ggplot(aes(x = survival_days, color = age_cat)) +
geom_density(alpha = 0.3) +
xlab("Days of Survival") +
scale_color_discrete(name = "Age") +
theme_bw()
data %>%
filter(state == "deceased") %>%
mutate(survival_days = as.numeric(survival_days, units = "days")) %>%
ggplot(aes(x = survival_days, color = factor(approx_age))) +
geom_density(alpha = 0.3) +
xlab("Days of Survival") +
scale_color_discrete(name = "Age") +
theme_bw()
data %>%
filter(state == "deceased") %>%
mutate(survival_days = as.numeric(survival_days, units = "days")) %>%
ggplot(aes(x = survival_days, color = age_cat)) +
geom_density(alpha = 0.3) +
xlab("Days of Survival") +
scale_color_discrete(name = "Age") +
theme_bw()
data %>%
filter(state == "deceased") %>%
mutate(survival_days = as.numeric(survival_days, units = "days")) %>%
ggplot(aes(x = survival_days, color = province)) +
geom_density(alpha = 0.3) +
xlab("Days of Survival") +
scale_color_discrete(name = "Province") +
theme_bw()
data %>%
filter(state == "deceased") %>%
filter(infection_case %in% c("contact with patient", "overseas inflow",
"Guro-gu Call Center", "Shincheonji Church"))
data %>%
filter(state == "deceased") %>%
filter(infection_case %in% c("contact with patient", "overseas inflow",
"Guro-gu Call Center", "Shincheonji Church")) %>%
mutate(survival_days = as.numeric(survival_days, units = "days")) %>%
ggplot(aes(x = survival_days, color = infection_case)) +
geom_density(alpha = 0.3) +
xlab("Days of Survival") +
scale_color_discrete(name = "Infection Case") +
theme_bw()
data %>% filter(state == "deceased") %>% count(infection_case)
### K-M values and K-M curves
sex_surv <- survfit(Surv(survival_days, event, type = "right") ~ sex, data)
age_surv <- survfit(Surv(survival_days, event, type = "right") ~ age_cat, data)
province_surv <- survfit(Surv(survival_days, event, type = "right") ~ province, data)
autoplot(sex_surv) +
labs(x = "Survival Days", y = "Proportion Surviving", title = "KM Survival Plots by Sex") +
theme_bw()
### K-M values and K-M curves
sex_surv <- survfit(Surv(survival_days, event, type = "right") ~ sex, data)
autoplot(sex_surv)
library(ggfortify)
autoplot(sex_surv) +
labs(x = "Survival Days", y = "Proportion Surviving", title = "KM Survival Plots by Sex") +
theme_bw()
autoplot(age_surv) +
labs(x = "Insurance Status at Diagnosis", y = "Proportion Surviving",
title = "KM Survival Plots by Insurance Status at Diagnosis")+
theme_bw()
### K-M values and K-M curves
sex_surv <- survfit(Surv(survival_days, event, type = "right") ~ sex, data)
age_surv <- survfit(Surv(survival_days, event, type = "right") ~ age_cat, data)
province_surv <- survfit(Surv(survival_days, event, type = "right") ~ province, data)
autoplot(sex_surv) +
labs(x = "Survival Days", y = "Proportion Surviving", title = "KM Survival Plots by Sex") +
theme_bw()
autoplot(age_surv) +
labs(x = "Survival Days", y = "Proportion Surviving",
title = "KM Survival Plots by Insurance Status at Diagnosis") +
theme_bw()
data %>% count(age_cat)
age_surv_data <- data %>%
filter(age_cat %in% c("30s", "50s", "60s", "70s", "80s", "90s"))
age_surv <- survfit(Surv(survival_days, event, type = "right") ~ age_cat, age_surv_data)
autoplot(age_surv) +
labs(x = "Survival Days", y = "Proportion Surviving",
title = "KM Survival Plots by Insurance Status at Diagnosis") +
theme_bw()
age_surv_data <- data %>%
filter(age_cat %in% c("30s", "50s", "60s", "70s", "80s", "90s"))
autoplot(age_surv) +
labs(x = "Survival Days", y = "Proportion Surviving",
title = "KM Survival Plots by Insurance Status at Diagnosis") +
theme_bw()
#age_surv_data <- data %>%
#    filter(age_cat %in% c("30s", "50s", "60s", "70s", "80s", "90s"))
age_surv <- survfit(Surv(survival_days, event, type = "right") ~ age_cat, age_surv_data)
#age_surv_data <- data %>%
#    filter(age_cat %in% c("30s", "50s", "60s", "70s", "80s", "90s"))
age_surv <- survfit(Surv(survival_days, event, type = "right") ~ age_cat, data)
ggsurvplot(age_surv, data = data, conf.int = T) +
labs(x = "Survival Days", y = "Proportion Surviving",
title = "KM Survival Plots by Insurance Status at Diagnosis") +
theme_bw()
library(survminer)
ggsurvplot(age_surv, data = data, conf.int = T) +
labs(x = "Survival Days", y = "Proportion Surviving",
title = "KM Survival Plots by Insurance Status at Diagnosis") +
theme_bw()
ggsurvplot(age_surv, data = data, conf.int = T)
ggsurvplot(age_surv, data = data, conf.int = F)
autoplot(province_surv) +
labs(x = "Survival Days", y = "Proportion Surviving", title = "KM Survival Plots by Sex") +
theme_bw()
ggsurvplot(province_surv, data = data, conf.int = F)
source('C:/Users/yuehy/Google Drive/01_projects/ada_final/02_analysis/02_k-m_stats.R', echo=TRUE)
source('C:/Users/yuehy/Google Drive/01_projects/ada_final/02_analysis/02_k-m_stats.R', echo=TRUE)
(sex_surv_lr <- survdiff(Surv(survival_days, event, type = "right") ~ sex, data))
(age_surv_lr <- survdiff(Surv(survival_days, event, type = "right") ~ age_cat, data))
(province_surv_lr <- survdiff(Surv(survival_days, event, type = "right") ~ province, data))
(sex_surv_lr <- survdiff(Surv(survival_days, event, type = "right") ~ sex, data))
(age_surv_lr <- survdiff(Surv(survival_days, event, type = "right") ~ age_cat, data))
(province_surv_lr <- survdiff(Surv(survival_days, event, type = "right") ~ province, data))
(sex_surv_pw <- pairwise_survdiff(Surv(survival_days, event, type = "right") ~ sex, data))
(age_surv_pw <- pairwise_survdiff(Surv(survival_days, event, type = "right") ~ age_cat, data))
(province_surv_pw <- pairwise_survdiff(Surv(survival_days, event, type = "right") ~ province, data))
data %>% filter(event == 1)
data %>% filter(event == 1) %>% count(age_cat)
(age_surv_lr <- survdiff(Surv(survival_days, event, type = "right") ~ age_cat, data))
(sex_surv_pw <- pairwise_survdiff(Surv(survival_days, event, type = "right") ~ sex, data))
(age_surv_pw <- pairwise_survdiff(Surv(survival_days, event, type = "right") ~ age_cat, data))
(province_surv_pw <- pairwise_survdiff(Surv(survival_days, event, type = "right") ~ province, data))
(age_surv_pw <- pairwise_survdiff(Surv(survival_days, event, type = "right") ~ factor(age_cat), data))
test <- data %>% mutate(as.factor(age_cat))
(age_surv_pw <- pairwise_survdiff(Surv(survival_days, event, type = "right") ~ age_cat, test))
(sex_surv_lr <- survdiff(Surv(survival_days, event, type = "right") ~ sex, data))
(age_surv_lr <- survdiff(Surv(survival_days, event, type = "right") ~ age_cat, data))
(province_surv_lr <- survdiff(Surv(survival_days, event, type = "right") ~ province, data))
(sex_surv_cox <- coxph(Surv(survival_days, event, type = "right") ~ sex, data))
(age_surv_cox <- coxph(Surv(survival_days, event, type = "right") ~ age, data))
(age_surv_cox <- coxph(Surv(survival_days, event, type = "right") ~ approx_age, data))
(province_surv_cox <- coxph(Surv(survival_days, event, type = "right") ~ province, data))
summary(province_surv_cox)
source('C:/Users/yuehy/Google Drive/01_projects/ada_final/02_analysis/03_cox_univ_models.R', echo=TRUE)
data %>% filter(event == 1) %>% count(age_cat)
(elderly_surv_cox <- coxph(Surv(survival_days, event, type = "right") ~ elderly_population_ratio, data))
summary(elderly_surv_cox)
(temp_surv_cox <- coxph(Surv(survival_days, event, type = "right") ~ avg_temp, data))
summary(temp_surv_cox)
library(qwraps2)
data %>% count(age)
data %>% count(approx_age)
data %>% count(approx_age) %>% filter(is.na())
data %>% count(approx_age) %>% arrange(desc(n))
data %>% ggplot(aes(x = approx_age)) +geom_histogram()
data %>% count(province)
data %>% count(province) %>% arrange(desc(n))
source('C:/Users/yuehy/Google Drive/01_projects/ada_final/02_analysis/05_demographics.R', echo=TRUE)
data_table01 <- data %>%
mutate(province_cat = recode(province,
"Incheon" = "Other",
"Daegu" = "other",
"Sejong" = "Other",
"Chungcheongbuk-do" = "Other",
"Ulsan" = "Other",
"Daejeon" = "Other",
"Gangwon-do" = "Other",
"Gwangju" = "Other",
"Jeollabuk-do" = "Other",
"Jeollanam-do" = "Other",
"Jeju-doJeju-do" = "Other"))
data_table01 <- data %>%
mutate(province_cat = recode(province,
"Incheon" = "Other",
"Daegu" = "other",
"Sejong" = "Other",
"Chungcheongbuk-do" = "Other",
"Ulsan" = "Other",
"Daejeon" = "Other",
"Gangwon-do" = "Other",
"Gwangju" = "Other",
"Jeollabuk-do" = "Other",
"Jeollanam-do" = "Other",
"Jeju-doJeju-do" = "Other")) %>%
mutate(resolution_days = as.numeric(resolved_date - confirmed_date), units = "days")
data %>% count(state)
source('C:/Users/yuehy/Google Drive/01_projects/ada_final/02_analysis/05_demographics.R', echo=TRUE)
?hijack
# function to change defaults in qwraps2 for table display
hijack <- function (FUN, ...) {
.FUN <- FUN
args <- list(...)
invisible(lapply(seq_along(args), function(i) {
formals(.FUN)[[names(args)[i]]] <<- args[[i]]
}))
.FUN
}
source('C:/Users/yuehy/Google Drive/01_projects/ada_final/02_analysis/05_demographics.R', echo=TRUE)
table01
source('C:/Users/yuehy/Google Drive/01_projects/ada_final/02_analysis/05_demographics.R', echo=TRUE)
table01
knitr::opts_chunk$set(echo = TRUE)
(surv_cox <- coxph(Surv(surv_mo_num, event_f) ~ sex + approx_age + province, cerv))
